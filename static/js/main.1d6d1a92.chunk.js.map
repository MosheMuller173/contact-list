{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"mLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCOCQ,EAZF,SAAC,GAA2B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,GAC5B,OACE,sBAAKC,UAAU,oDAAf,UACE,qBAAKC,IAAI,kBAAkBC,IAAG,+BAA4BH,EAA5B,cAC9B,gCACE,6BAAKF,IACL,4BAAIC,WCeGK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMP,GAChB,OACE,cAAC,EAAD,CAEAA,GAAIK,EAAOL,GAAIA,GACfF,KAAMO,EAAOL,GAAIF,KACjBC,MAAOM,EAAOL,GAAID,OAHbC,SCIFQ,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,kCACVU,KAAK,SACLC,YAAY,kBACZC,SAAUH,OCCHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,iBAAkBC,OAAQ,SAAnE,SACGJ,EAAMK,YC6CEC,G,wDA1Cb,aAAe,IAAD,8BACZ,gBAcJC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAdxC,EAAKC,MAAQ,CACXtB,OAAQ,GACRI,YAAa,IAJH,E,qDAQhB,WAAqB,IAAD,OAClBmB,MAAM,8CACHrC,MAAK,SAAAsC,GAAQ,OAAIA,EAASC,UAC5BvC,MAAK,SAAAwC,GAAK,OAAK,EAAKP,SAAS,CAACnB,OAAQ0B,S,oBASzC,WAAU,IAAD,OACDC,EAAiBC,KAAKN,MAAMtB,OAAO6B,QAAO,SAAA7B,GAC9C,OAAOA,EAAOP,KAAKqC,cAAcC,SAAS,EAAKT,MAAMlB,YAAY0B,kBAIrE,OAAiC,IAA7BF,KAAKN,MAAMtB,OAAOgC,OACb,yCAIL,sBAAKpC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ2B,a,GApCRM,c,MCClBC,IAASC,OACL,cAAC,EAAD,IAAUC,SAASC,eAAe,SAKtCtD,M","file":"static/js/main.1d6d1a92.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ( { name, email, id } ) => {\r\n  return (\r\n    <div className=\"tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow5\">\r\n      <img alt='robot directory' src = {`https://robohash.org/${id}?200x200`}/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, id) => {\r\n          return (\r\n            <Card\r\n            key={id}\r\n            id={robots[id].id}\r\n            name={robots[id].name}\r\n            email={robots[id].email}\r\n            />\r\n          );\r\n      })\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--pink bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search contacts'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflow: 'scroll', border: '5px solid pink', height: '500px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll'\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\ncomponentDidMount() {\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n  .then(users =>  this.setState({robots: users}));\r\n\r\n}\r\n\r\nonSearchChange = (event) => {\r\n  this.setState({ searchfield: event.target.value })\r\n\r\n}\r\n\r\nrender() {\r\n  const filteredRobots = this.state.robots.filter(robots =>{\r\n    return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\r\n})\r\n\r\nif( this.state.robots.length === 0) {\r\n  return <h1>Loading</h1>\r\n} else {\r\n\r\n  return (\r\n    <div className='tc'>\r\n      <h1 className='f1'>Contact List</h1>\r\n      <SearchBox searchChange={this.onSearchChange}/>\r\n      <Scroll>\r\n        <CardList robots={filteredRobots} />\r\n      </Scroll>\r\n    </div>\r\n  );\r\n }\r\n}\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\nimport \"tachyons\";\r\n\r\n\r\nReactDOM.render(\r\n    <App /> , document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}